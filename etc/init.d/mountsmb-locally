#!/bin/sh
#
### BEGIN INIT INFO
# Provides:          mountsmb-locally
# Required-Start:    $network $local_fs $remote_fs samba
# Required-Stop:     $network $local_fs $remote_fs samba
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: mount Samba shares locally
### END INIT INFO


if [ -f /lib/lsb/init-functions ]; then
        . /lib/lsb/init-functions
fi

LOCKFILE=/var/lock/mountsmb-locally

lock_mountsmb_locally() {
        if [ -x /usr/bin/lockfile-create ]; then
                lockfile-create $LOCKFILE
                lockfile-touch $LOCKFILE &
        fi
}

unlock_mountsmb_locally() {
	if [ -x /usr/bin/lockfile-create ] ; then
                lockfile-remove $LOCKFILE
        fi
}

start () {
        hostname=`hostname`
	username=`whoami`
        uid=`id -u $username`
        gid=`id -g $username`

        log_daemon_msg "Mounting local Samba shares..."
        if [ ! -x /pool/ ]; then
                mkdir -p /pool/
        fi
        cd /pool/
        lock_mountsmb_locally
        grep "^\[" /etc/samba/smb.conf | grep -v "\[global\]" | grep -v "\[homes\]" | awk -F'[' '{print $2}' | awk -F']' '{print $1}' | sort | uniq | xargs -d "\n" mkdir -p
        sleep 2
        ls -1 | while read directory; do
                if [ "`mount | grep "//${hostname}/${directory}/* on " | wc -l`" = "0" ]; then
			/sbin/mount.cifs "//${hostname}/${directory}" "/pool/${directory}" -o credentials=/${username}/.smb_credentials,uid=${uid},gid=${gid},nobrl,hard,iocharset=utf8,noserverino
                else
                        echo "  Share [$directory] is already mounted."
                fi
        done
        unlock_mountsmb_locally
        log_end_msg
        return 0
}

stop () {
        log_daemon_msg "Unmounting local Samba shares..."
        /bin/umount -l /pool/*
        log_end_msg
        return 0
}

case "$1" in
        start) 
                start
                ;;
        stop)  
                stop
                ;;
        restart)
                $0 stop && sleep 2 && $0 start
                ;;
        *)
                echo "Usage: $0 {start|stop|restart}"
                exit 2
                ;;
esac
